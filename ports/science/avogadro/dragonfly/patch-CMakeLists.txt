--- CMakeLists.txt.intermediate	2018-02-27 14:36:28.000000000 +0000
+++ CMakeLists.txt
@@ -95,8 +95,8 @@ if (CMAKE_COMPILER_IS_GNUCXX)
   if(NOT APPLE) # Mac GCC42 compiler has bug
     check_cxx_compiler_flag(-fvisibility=hidden HAVE_GCC_VISIBILITY)
     set(HAVE_GCC_VISIBILITY ${HAVE_GCC_VISIBILITY} CACHE BOOL "GCC support for hidden visibility")
-    macro_ensure_version("4.1.0" "${_gcc_version}" GCC_IS_NEWER_THAN_4_1)
-    macro_ensure_version("4.2.0" "${_gcc_version}" GCC_IS_NEWER_THAN_4_2)
+    macro_ensure_version2("4.1" "${_gcc_version}" GCC_IS_NEWER_THAN_4_1)
+    macro_ensure_version2("4.2" "${_gcc_version}" GCC_IS_NEWER_THAN_4_2)
     set(_GCC_COMPILED_WITH_BAD_ALLOCATOR FALSE)
     if (GCC_IS_NEWER_THAN_4_1)
       exec_program(${CMAKE_C_COMPILER} ARGS -v OUTPUT_VARIABLE _gcc_alloc_info)
--- cmake/modules/MacroEnsureVersion.cmake.orig	2013-12-06 15:50:04.000000000 +0000
+++ cmake/modules/MacroEnsureVersion.cmake
@@ -67,8 +67,8 @@ MACRO(NORMALIZE_VERSION _requested_versi
         STRING(REGEX REPLACE "[^0-9]*[0-9]+\\.([0-9]+)\\.[0-9]+.*" "\\1" _minor_vers "${_requested_version}")
         STRING(REGEX REPLACE "[^0-9]*[0-9]+\\.[0-9]+\\.([0-9]+).*" "\\1" _patch_vers "${_requested_version}")
     else (_threePartMatch)
-        STRING(REGEX REPLACE "([0-9]+)\\.[0-9]+" "\\1" _major_vers "${_requested_version}")
-        STRING(REGEX REPLACE "[0-9]+\\.([0-9]+)" "\\1" _minor_vers "${_requested_version}")
+        STRING(REGEX REPLACE "[^0-9]*([0-9]+)\\.[0-9]+.*" "\\1" _major_vers "${_requested_version}")
+        STRING(REGEX REPLACE "[^0-9]*[0-9]+\\.([0-9]+).*" "\\1" _minor_vers "${_requested_version}")
         set(_patch_vers "0")
     endif (_threePartMatch)
 

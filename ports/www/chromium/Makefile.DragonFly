USE_CXXSTD= gnu++11
KERBEROS_LIB_DEPENDS+=	libgssapi_krb5.so:security/krb5
USES+=		alias

OPTIONS_DEFAULT:= ${OPTIONS_DEFAULT:NGCONF:NPULSEAUDIO:NKERBEROS} ALSA

# provide value for NM if not already (not in mk/bsd.*.mk)
NM?=		nm

GN_ARGS+=	use_allocator="none" use_experimental_allocator_shim=false
#GN_ARGS+=	current_os="bsd" host_os="bsd" target_os="bsd" is_bsd=true
GN_ARGS+=	fatal_linker_warnings=false host_toolchain="//build/toolchain/linux:x64"
GN_ARGS+=	is_clang=false enable_nacl=false

# zrj: should we patch components/policy/resources/policy_templates.json too?
dfly-patch:
	${LN} -sfv ${WRKSRC}/base/process/process_handle_freebsd.cc \
		   ${WRKSRC}/base/process/process_handle_dragonfly.cc
	${LN} -sfv ${WRKSRC}/base/process/process_iterator_freebsd.cc \
		   ${WRKSRC}/base/process/process_iterator_dragonfly.cc
	${LN} -sfv ${WRKSRC}/base/process/process_metrics_freebsd.cc \
		   ${WRKSRC}/base/process/process_metrics_dragonfly.cc
	${LN} -sfv ${WRKSRC}/base/sys_info_freebsd.cc \
		   ${WRKSRC}/base/sys_info_dragonfly.cc
	${LN} -sfv ${WRKSRC}/base/threading/platform_thread_freebsd.cc \
		   ${WRKSRC}/base/threading/platform_thread_dragonfly.cc
	${LN} -sfv ${WRKSRC}/base/third_party/libevent/freebsd \
		   ${WRKSRC}/base/third_party/libevent/dragonfly
	${LN} -sfv ${LOCALBASE}/include/X11 ${WRKSRC}/third_party/angle/include/X11
	@${FIND} ${WRKSRC} -type f -name \*\.gyp\* | \
		${GREP} -vE "/v8/|libusb" | ${XARGS} ${GREP} -l '"freebsd"' | \
		${XARGS} ${REINPLACE_CMD} -e 's|"freebsd"|"dragonfly"|g'
	@${FIND} ${WRKSRC} -type f -name \*\.gyp\* | \
		${GREP} -vE "/v8/|libusb" | ${XARGS} ${GREP} -l '"freebsd"' | \
		${XARGS} ${REINPLACE_CMD} -e 's|"freebsd"|"dragonfly"|g'
	@${FIND} ${WRKSRC} -type f -name \*\.py | ${GREP} -v /v8/ | \
		${XARGS} ${GREP} -l "'freebsd'" | \
		${XARGS} ${REINPLACE_CMD} -e "s|'freebsd'|'dragonfly'|g"
	@${REINPLACE_CMD} -e 's|"freebsd"|"dragonfly"|g' \
		${WRKSRC}/v8/gypfiles/standalone.gypi \
		${WRKSRC}/v8/gypfiles/toolchain.gypi \
		${WRKSRC}/v8/src/d8.gyp \
		${WRKSRC}/v8/src/v8.gyp
	@${REINPLACE_CMD} -e 's|0xFFFFFFFF[[:>:]]|0x7FFFFFFF|' \
		${WRKSRC}/third_party/mesa/src/include/GL/glext.h \
		${WRKSRC}/third_party/mesa/src/src/mapi/glapi/gen/ARB_uniform_buffer_object.xml \
		${WRKSRC}/third_party/mesa/src/chromium_gensrc/mesa/enums.c \
		${WRKSRC}/third_party/khronos/GLES3/gl3.h \
		${WRKSRC}/third_party/khronos/GLES3/gl31.h \
		${WRKSRC}/third_party/khronos/noninclude/GL/glext.h \
		${WRKSRC}/third_party/webgl/src/specs/latest/2.0/webgl2.idl \
		${WRKSRC}/third_party/angle/include/GLES3/gl3.h \
		${WRKSRC}/third_party/angle/include/GLES3/gl31.h \
		${WRKSRC}/third_party/angle/src/libANGLE/renderer/gl/functionsgl_enums.h
	${REINPLACE_CMD} -e "s|'freebsd'|'dragonfly'|g"	\
		${WRKSRC}/v8/gypfiles/landmine_utils.py
	${REINPLACE_CMD} -e "s@rtc_build_usrsctp = true@rtc_build_usrsctp = false #@g"	\
		${WRKSRC}/third_party/webrtc/build/webrtc.gni
	${REINPLACE_CMD} -e "s@[[:<:]]HAVE_SCTP[[:>:]]@HAVE_SCTP_not@g"	\
		${WRKSRC}/third_party/webrtc/api/BUILD.gn \
		${WRKSRC}/third_party/webrtc/pc/BUILD.gn \
		${WRKSRC}/third_party/webrtc/BUILD.gn
#	${REINPLACE_CMD} -e "s@enable_webrtc = @enable_webrtc = false #@g"	\
#		${WRKSRC}/build/config/features.gni
#	${REINPLACE_CMD} -e "/PLATFORM_HAS_NATIVE_ACCESSIBILITY_IMPL 1/d"	\
#		${WRKSRC}/content/browser/accessibility/browser_accessibility.h
#	${REINPLACE_CMD} -e "/PLATFORM_HAS_NATIVE_VIEW_ACCESSIBILITY_IMPL 1/d"	\
#		${WRKSRC}/ui/views/accessibility/native_view_accessibility.h
#	${REINPLACE_CMD} -e "/PLATFORM_HAS_AX_PLATFORM_NODE_IMPL 1/d"	\
#		${WRKSRC}/ui/accessibility/platform/ax_platform_node.h
#	${REINPLACE_CMD} -e "s@is_desktop_linux = @is_desktop_linux = false #@g"	\
#		${WRKSRC}/build/config/BUILDCONFIG.gn
#	${REINPLACE_CMD} -e "s@\(use_atk = \)@\1 false #@g"	\
#		${WRKSRC}/build/config/ui.gni

--- SConscript.orig	2018-04-02 00:19:03.000000000 +0300
+++ SConscript
@@ -87,7 +87,7 @@ elif GetOption('lin'):
 	platform = "Linux"
 elif GetOption('mac'):
 	platform = "Darwin"
-elif compilePlatform not in ["Linux", "Windows", "Darwin", "FreeBSD"]:
+elif compilePlatform not in ["Linux", "Windows", "Darwin", "FreeBSD", "DragonFly"]:
 	FatalError("Unknown platform: {0}".format(platform))
 
 msvc = GetOption('msvc')
@@ -243,7 +243,7 @@ def findLibs(env, conf):
 
 	if not GetOption('renderer'):
 		#Look for SDL
-		runSdlConfig = platform == "Linux" or compilePlatform == "Linux" or platform == "FreeBSD"
+		runSdlConfig = platform == "Linux" or compilePlatform == "Linux" or platform == "FreeBSD" or platform == "DragonFly"
 		if platform == "Darwin" and conf.CheckFramework("SDL"):
 			runSdlConfig = False
 		elif not conf.CheckLib("SDL"):
@@ -268,7 +268,7 @@ def findLibs(env, conf):
 
 	if not GetOption('nolua') and not GetOption('renderer'):
 		#Look for Lua
-		if platform == "FreeBSD":
+		if platform == "FreeBSD" or platform == "DragonFly":
 			luaver = "lua-5.1"
 		else:
 			luaver = "lua5.1"
@@ -281,7 +281,7 @@ def findLibs(env, conf):
 			if not conf.CheckLib(['lua5.2', 'lua-5.2', 'lua52', 'lua']):
 				FatalError("lua5.2 development library not found or not installed")
 			env.Append(CPPDEFINES=["LUA_COMPAT_ALL"])
-			if platform == "FreeBSD":
+			if platform == "FreeBSD" or platform == "DragonFly":
 				luaver = "lua-5.2"
 			else:
 				luaver = "lua5.2"
@@ -290,7 +290,7 @@ def findLibs(env, conf):
 				if platform != "Darwin" or not conf.CheckFramework("Lua"):
 					FatalError("lua5.1 development library not found or not installed")
 		foundpkg = False
-		if platform == "Linux" or platform == "FreeBSD":
+		if platform == "Linux" or platform == "FreeBSD" or platform == "DragonFly":
 			try:
 				env.ParseConfig("pkg-config --cflags {0}".format(luaver))
 				env.ParseConfig("pkg-config --libs {0}".format(luaver))
@@ -347,7 +347,7 @@ def findLibs(env, conf):
 
 	#Look for OpenGL libraries
 	if GetOption('opengl'):
-		if platform == "Linux" or platform == "FreeBSD":
+		if platform == "Linux" or platform == "FreeBSD" or platform == "DragonFly":
 			if not conf.CheckLib('GL'):
 				FatalError("libGL not found or not installed")
 			try:
@@ -364,7 +364,7 @@ def findLibs(env, conf):
 			if not conf.CheckFramework("OpenGL"):
 				FatalError("OpenGL framework not found or not installed")
 
-	if platform == "Linux" or platform == "FreeBSD":
+	if platform == "Linux" or platform == "FreeBSD" or platform == "DragonFly":
 		if not conf.CheckLib('X11'):
 			FatalError("X11 development library not found or not installed")
 
@@ -419,7 +419,7 @@ if platform == "Windows":
 			env.Append(LINKFLAGS=['/NODEFAULTLIB:msvcrtd.lib'])
 	else:
 		env.Append(LINKFLAGS=['-mwindows'])
-elif platform == "Linux" or platform == "FreeBSD":
+elif platform == "Linux" or platform == "FreeBSD" or platform == "DragonFly":
 	env.Append(CPPDEFINES=['LIN'])
 elif platform == "Darwin":
 	env.Append(CPPDEFINES=['MACOSX'])

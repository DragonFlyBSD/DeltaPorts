from armagetron forums

--- src/tools/tLocale.cpp.orig	2016-07-10 20:44:43 +0000
+++ src/tools/tLocale.cpp
@@ -731,6 +731,13 @@
 
 // and a special implementation for the locales and strings:
 tOutput& operator << (tOutput &o, const char *locale){
+    return o.AddString(locale);
+}
+
+tOutput & tOutput::AddString(char const * locale)
+{
+    tOutput & o = *this;
+
     int len = strlen(locale);
     if (len == 0)
         return o;

--- src/tools/tLocale.h.orig	2016-07-10 20:44:43 +0000
+++ src/tools/tLocale.h
@@ -81,7 +81,7 @@
 
     tOutputItemBase *anchor;
 
-    tOutput& operator << (const tOutput &o);
+    // tOutput& operator << (const tOutput &o);
 public:
     tOutput();
     ~tOutput();
@@ -91,6 +91,7 @@
     void AddLiteral(const char *);       // adds a language independent string
     void AddLocale(const char *);        // adds a language dependant string
     void AddSpace();                     // adds a simple space
+    tOutput & AddString(char const * pString); // checks the string, delegates to correct Add...()-Function
 
     // set a template parameter at this position of the output string
     tOutput & SetTemplateParameter(int num, const char *parameter);
@@ -113,7 +114,7 @@
 
         SetTemplateParameter(1, template1);
 
-        *this << identifier;
+        AddString(identifier);
     }
 
     template< class T1, class T2 >
@@ -125,7 +126,7 @@
         SetTemplateParameter(1, template1);
         SetTemplateParameter(2, template2);
 
-        *this << identifier;
+        AddString(identifier);
     }
 
     template< class T1, class T2, class T3 >
@@ -138,7 +139,7 @@
         SetTemplateParameter(2, template2);
         SetTemplateParameter(3, template3);
 
-        *this << identifier;
+        AddString(identifier);
     }
 
     template< class T1, class T2, class T3, class T4 >
@@ -152,7 +153,7 @@
         SetTemplateParameter(3, template3);
         SetTemplateParameter(4, template4);
 
-        *this << identifier;
+        AddString(identifier);
     }
 
     tOutput(const tOutput &o); // copy constructor


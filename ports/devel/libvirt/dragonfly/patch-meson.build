--- meson.build.orig	2022-03-01 09:08:21 UTC
+++ meson.build
@@ -618,7 +618,7 @@ if host_machine.system() == 'linux'
   headers += 'linux/devlink.h'
 endif
 
-if host_machine.system() == 'freebsd'
+if host_machine.system() in [ 'freebsd', 'dragonfly' ]
   headers += 'libutil.h'
 endif
 
@@ -699,9 +699,9 @@ endforeach
 brd_required_headers = '''#include <stdint.h>
 #include <net/if.h>
 #include <net/ethernet.h>'''
-if (cc.has_header_symbol('net/if_bridgevar.h', 'BRDGSFD', prefix: brd_required_headers) and
-    cc.has_header_symbol('net/if_bridgevar.h', 'BRDGADD', prefix: brd_required_headers) and
-    cc.has_header_symbol('net/if_bridgevar.h', 'BRDGDEL', prefix: brd_required_headers))
+if (cc.has_header_symbol('net/bridge/if_bridgevar.h', 'BRDGSFD', prefix: brd_required_headers) and
+    cc.has_header_symbol('net/bridge/if_bridgevar.h', 'BRDGADD', prefix: brd_required_headers) and
+    cc.has_header_symbol('net/bridge/if_bridgevar.h', 'BRDGDEL', prefix: brd_required_headers))
   conf.set('WITH_BSD_BRIDGE_MGMT', 1)
 endif
 
@@ -791,7 +791,7 @@ required_programs_groups = [
   { 'name': 'rpcgen', 'prog': [ 'rpcgen', 'portable-rpcgen' ] },
 ]
 
-if host_machine.system() == 'freebsd'
+if host_machine.system() in [ 'freebsd', 'dragonfly' ]
   required_programs += 'ifconfig'
 endif
 
@@ -855,7 +855,7 @@ if not get_option('driver_remote').disab
     xdr_dep = cc.find_library('portablexdr', required: get_option('driver_remote'))
   elif host_machine.system() == 'linux'
     xdr_dep = dependency('libtirpc', required: get_option('driver_remote'))
-  elif host_machine.system() in [ 'freebsd', 'darwin' ]
+  elif host_machine.system() in [ 'freebsd', 'darwin', 'dragonfly' ]
     xdr_dep = cc.find_library('c', required: get_option('driver_remote'))
   else
     xdr_dep = dependency('', required: false)
@@ -980,7 +980,7 @@ gnutls_version = '3.2.0'
 gnutls_dep = dependency('gnutls', version: '>=' + gnutls_version)
 
 # Check for BSD kvm (kernel memory interface)
-if host_machine.system() == 'freebsd'
+if host_machine.system() in [ 'freebsd', 'dragonfly' ]
   libkvm_dep = cc.find_library('kvm')
 else
   libkvm_dep = dependency('', required: false)

--- intern/cycles/util/util_aligned_malloc.cpp.orig	2015-04-01 05:44:23.000000000 +0300
+++ intern/cycles/util/util_aligned_malloc.cpp
@@ -21,7 +21,7 @@
 
 /* Adopted from Libmv. */
 
-#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__NetBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__NetBSD__) && !defined(__DragonFly__)
 /* Needed for memalign on Linux and _aligned_alloc on Windows. */
 #  ifdef FREE_WINDOWS
 /* Make sure _aligned_malloc is included. */
@@ -53,7 +53,7 @@ void *util_aligned_malloc(size_t size, i
 	 */
 	assert(alignment == 16);
 	return malloc(size);
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__DragonFly__)
 	void *result;
 	if (posix_memalign(&result, alignment, size)) {
 		/* Non-zero means allocation error
--- intern/guardedalloc/intern/mallocn.c.orig	2015-03-25 13:01:16.000000000 +0200
+++ intern/guardedalloc/intern/mallocn.c
@@ -75,7 +75,7 @@ void *aligned_malloc(size_t size, size_t
 	assert(alignment == 16);
 	(void)alignment;
 	return malloc(size);
-#elif defined(__FreeBSD__) || defined(__NetBSD__)
+#elif defined(__FreeBSD__) || defined(__NetBSD__) || defined(__DragonFly__)
 	void *result;
 
 	if (posix_memalign(&result, alignment, size)) {
--- intern/guardedalloc/intern/mallocn_intern.h.orig	2015-03-25 12:56:13.000000000 +0200
+++ intern/guardedalloc/intern/mallocn_intern.h
@@ -54,6 +54,10 @@
 #if defined(__linux__) || (defined(__FreeBSD_kernel__) && !defined(__FreeBSD__)) || defined(__GLIBC__)
 #  include <malloc.h>
 #  define HAVE_MALLOC_STATS
+#elif defined(__DragonFly__)
+#  undef NDEBUG
+#  include <assert.h>
+static inline uint64_t malloc_usable_size(uint64_t x){assert(1);return x;}
 #elif defined(__FreeBSD__)
 #  include <malloc_np.h>
 #elif defined(__APPLE__)
@@ -85,7 +88,7 @@
 #  define UNLIKELY(x)     (x)
 #endif
 
-#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__NetBSD__)
+#if !defined(__APPLE__) && !defined(__FreeBSD__) && !defined(__NetBSD__) && !defined(__DragonFly__)
 // Needed for memalign on Linux and _aligned_alloc on Windows.
 #  ifdef FREE_WINDOWS
 /* make sure _aligned_malloc is included */

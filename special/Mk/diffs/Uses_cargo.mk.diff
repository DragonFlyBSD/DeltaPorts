--- Uses/cargo.mk.orig	2023-06-03 13:33:18 UTC
+++ Uses/cargo.mk
@@ -3,16 +3,16 @@
 #
 # Feature:	cargo
 # Usage:	USES=cargo
-# Valid ARGS:	none
+# Valid ARGS:	extra
 #
 # MAINTAINER: rust@FreeBSD.org
 
 .if !defined(_INCLUDE_USES_CARGO_MK)
 _INCLUDE_USES_CARGO_MK=	yes
 
-.  if !empty(cargo_ARGS)
-IGNORE+=	USES=cargo takes no arguments
-.  endif
+. if ${cargo_ARGS:Mextra}
+.  include "${USESDIR}/cargo-extra.mk"
+. endif
 
 .sinclude "${MASTERDIR}/Makefile.crates"
 
@@ -140,12 +140,18 @@ CARGO_ENV+=	RUST_BACKTRACE=1
 .  endif
 
 .  if !defined(LTO_UNSAFE) || (defined(LTO_DISABLE_CHECK) && ${ARCH} == powerpc64) || (defined(LTO_DISABLE_CHECK) && ${ARCH} == riscv64)
-_CARGO_MSG=	"===>   Additional optimization to port applied"
-WITH_LTO=	yes
+#
+# XXX: We cannot enable LTO optimizations here for rust because it ignores
+#      libraries at link time (possibly due to --as-needed being specified).
+#      This is likely a bug and we have to sort it out before this can be
+#      enabled.
+#
+_CARGO_MSG=	"===>   Additional optimization to port applied (no-LTO for DragonFly BSD)"
+WITH_LTO=	no
 .  endif
 
 # Adjust -C target-cpu if -march/-mcpu is set by bsd.cpu.mk
-.  if ${ARCH} == amd64 || ${ARCH} == i386
+.  if ${ARCH} == x86_64 || ${ARCH} == i386
 RUSTFLAGS+=	${CFLAGS:M-march=*:S/-march=/-C target-cpu=/}
 .  elif ${ARCH:Mpowerpc*}
 RUSTFLAGS+=	${CFLAGS:M-mcpu=*:S/-mcpu=/-C target-cpu=/:S/power/pwr/}

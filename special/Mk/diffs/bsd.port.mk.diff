--- bsd.port.mk.orig	2021-02-21 18:18:12 UTC
+++ bsd.port.mk
@@ -44,8 +44,9 @@ FreeBSD_MAINTAINER=	portmgr@FreeBSD.org
 #				  "FreeBSD," "NetBSD," or "OpenBSD" as appropriate.
 # OSREL			- The release version of the operating system as a text
 #				  string (e.g., "12.2").
-# OSVERSION		- The operating system version as a comparable integer;
+# OSVERSION		- 9999999 - try to ignore FreeBSD version check
 #				  the value of __FreeBSD_version (e.g., 1202000).
+# DFLYVERSION	- The value of __DragonFly_version.
 #
 # This is the beginning of the list of all variables that need to be
 # defined in a port, listed in order that they should be included
@@ -479,6 +480,12 @@ FreeBSD_MAINTAINER=	portmgr@FreeBSD.org
 #				  Default: ${MASTERDIR}/scripts
 # FILESDIR		- A directory containing any miscellaneous additional files.
 #				  Default: ${MASTERDIR}/files
+# DFLY_PATCHDIR=	- A directory containing additional patches required
+#				  to build port on DragonFly
+#				  Default: ${MASTERDIR}/dragonfly
+# DFLY_FILESDIR 	- A directory containing any miscellaneous files
+#				  needed to build port on DragonFly
+#				  Default: ${MASTERDIR}/dragonfly
 # PKGDIR		- A directory containing any package creation files.
 #				  Default: ${MASTERDIR}
 # SRC_BASE		- The root of the src tree.  (Some ports require this to get
@@ -1019,10 +1026,14 @@ LC_ALL=		C
 # These need to be absolute since we don't know how deep in the ports
 # tree we are and thus can't go relative.  They can, of course, be overridden
 # by individual Makefiles or local system make configuration.
-PORTSDIR?=		/usr/ports
+
+WITH_PKGNG?=		yes
+WITHOUT_FBSD10_FIX?=	yes
+PORTSDIR?=		/usr/dports
 LOCALBASE?=		/usr/local
 LINUXBASE?=		/compat/linux
-DISTDIR?=		${PORTSDIR}/distfiles
+DISTDIR?=		/usr/distfiles
+WRKDIRPREFIX?=		/usr/obj/dports
 _DISTDIR?=		${DISTDIR}/${DIST_SUBDIR}
 INDEXDIR?=		${PORTSDIR}
 SRC_BASE?=		/usr/src
@@ -1123,7 +1134,7 @@ MAINTAINER?=	ports@FreeBSD.org
 
 # Get the architecture
 .if !defined(ARCH)
-ARCH!=	${UNAME} -p
+ARCH=	x86_64
 .endif
 HOSTARCH:=	${ARCH}
 .if defined(CROSS_TOOLCHAIN)
@@ -1150,33 +1161,41 @@ OSVERSION!=	${AWK} '/^\#define[[:blank:]
 _OSRELEASE!= ${AWK} -v version=${OSVERSION} 'END { printf("%d.%d-CROSS", version / 100000, version / 1000 % 100) }' < /dev/null
 .endif
 
-# Get the operating system type
+# Get the operating system type.
+# tuxillo (02/2021): Not worth saving up some fork cycles, also dsynth
+# sets OPSYS so no point in hardcoding OPSYS, really.
+#
 .if !defined(OPSYS)
 OPSYS!=	${UNAME} -s
 .endif
 _EXPORTED_VARS+=	OPSYS
 
 .if !defined(_OSRELEASE)
-_OSRELEASE!=	${UNAME} -r
+. if !defined(.MAKE.DF.OSREL)
+.  error make(1) is not defining global variable .MAKE.DF.OSREL . This is a DF specific global variable.
+. endif
+_OSRELEASE=	${.MAKE.DF.OSREL}-DPORTS
 .endif
 _EXPORTED_VARS+=	_OSRELEASE
 
-# Get the operating system revision
-OSREL?=	${_OSRELEASE:C/-.*//}
-_EXPORTED_VARS+=	OSREL
-
 # Get __FreeBSD_version
 .if !defined(OSVERSION)
-.if exists(/usr/include/sys/param.h)
-OSVERSION!=	${AWK} '/^\#define[[:blank:]]__FreeBSD_version/ {print $$3}' < /usr/include/sys/param.h
-.elif exists(${SRC_BASE}/sys/sys/param.h)
-OSVERSION!=	${AWK} '/^\#define[[:blank:]]__FreeBSD_version/ {print $$3}' < ${SRC_BASE}/sys/sys/param.h
-.else
-.error Unable to determine OS version.  Either define OSVERSION, install /usr/include/sys/param.h or define SRC_BASE.
-.endif
+OSVERSION=     9999999
 .endif
 _EXPORTED_VARS+=	OSVERSION
 
+.if !defined(DFLYVERSION)
+. if defined(.MAKE.DF.OSREL)
+DFLYVERSION=	${.MAKE.DF.VERSION}
+OSREL=			${.MAKE.DF.OSREL}
+. else
+DFLYVERSION!=	${AWK} '/^\#define[[:blank:]]__DragonFly_version/ {print $$3}' < /usr/include/sys/param.h
+OSREL!=		${ECHO} ${DFLYVERSION} | ${AWK} '{a=int($$1/100000); b=int(($$1-(a*100000))/100); print a "." b}'
+. endif
+.endif
+_EXPORTED_VARS+=	DFLYVERSION OSREL
+
+
 .if (${OPSYS} == FreeBSD && (${OSVERSION} < 1104000 || (${OSVERSION} >= 1200000 && ${OSVERSION} < 1202000))) || \
     (${OPSYS} == DragonFly && ${DFLYVERSION} < 400400)
 _UNSUPPORTED_SYSTEM_MESSAGE=	Ports Collection support for your ${OPSYS} version has ended, and no ports\
@@ -1195,18 +1214,6 @@ show-unsupported-system-error:
 . endif
 .endif
 
-# Convert OSVERSION to major release number
-_OSVERSION_MAJOR=	${OSVERSION:C/([0-9]?[0-9])([0-9][0-9])[0-9]{3}/\1/}
-# Sanity checks for chroot/jail building.
-# Skip if OSVERSION specified on cmdline for testing. Only works for bmake.
-.if !defined(.MAKEOVERRIDES) || !${.MAKEOVERRIDES:MOSVERSION}
-.if ${_OSVERSION_MAJOR} != ${_OSRELEASE:R}
-.error UNAME_r (${_OSRELEASE}) and OSVERSION (${OSVERSION}) do not agree on major version number.
-.elif ${_OSVERSION_MAJOR} != ${OSREL:R}
-.error OSREL (${OSREL}) and OSVERSION (${OSVERSION}) do not agree on major version number.
-.endif
-.endif
-
 # Only define tools here (for transition period with between pkg tools)
 .include "${PORTSDIR}/Mk/bsd.commands.mk"
 
@@ -1344,9 +1351,11 @@ PKGNAME=	${PKGNAMEPREFIX}${PORTNAME}${PK
 DISTVERSIONFULL=	${DISTVERSIONPREFIX}${DISTVERSION:C/:(.)/\1/g}${DISTVERSIONSUFFIX}
 DISTNAME?=	${PORTNAME}-${DISTVERSIONFULL}
 
-INDEXFILE?=		INDEX-${OSVERSION:C/([0-9]*)[0-9]{5}/\1/}
+INDEXFILE?=		INDEX
 
-PACKAGES?=		${PORTSDIR}/packages
+DFLY_PATCHDIR?= 	${PATCHDIR:H}/dragonfly
+DFLY_FILESDIR?= 	${FILESDIR:H}/dragonfly
+PACKAGES?=		/usr/packages
 TEMPLATES?=		${PORTSDIR}/Templates
 KEYWORDS?=		${PORTSDIR}/Keywords
 WRAPPERSDIR?=	${PORTSDIR}/Mk/Wrappers/
@@ -1663,6 +1672,7 @@ QA_ENV+=		USESSHAREDMIMEINFO=yes
 .if !empty(USES:Mterminfo)
 QA_ENV+=		USESTERMINFO=yes
 .endif
+QA_ENV+=		DFLY_ALLOW_FOREIGN_BINARIES="${DFLY_ALLOW_FOREIGN_BINARIES:Dyes}"
 
 CO_ENV+=		STAGEDIR=${STAGEDIR} \
 				PREFIX=${PREFIX} \
@@ -1690,7 +1700,7 @@ _WRKDIR=	work
 _WRKDIR=	work-${FLAVOR}
 .endif
 
-WRKDIR?=		${WRKDIRPREFIX}${.CURDIR}/${_WRKDIR}
+WRKDIR=			${WRKDIRPREFIX}/${.CURDIR:H:T}/${.CURDIR:T}
 BINARY_LINKDIR=	${WRKDIR}/.bin
 PATH:=			${BINARY_LINKDIR}:${PATH}
 .if !${MAKE_ENV:MPATH=*} && !${CONFIGURE_ENV:MPATH=*}
@@ -1762,7 +1772,14 @@ PLIST_SUB_SED?= ${PLIST_SUB_SED_tmp3:C/(
 
 # kludge to strip trailing whitespace from CFLAGS;
 # sub-configure will not # survive double space
-CFLAGS:=	${CFLAGS:C/ $//}
+# remove -O from /usr/share/mk/sys.mk and replace with -O2
+# null out WORLD_CFLAGS coming from /etc/make.conf
+WORLD_CCOPTLEVEL:=
+WORLD_CFLAGS:=
+CFLAGS:=	${CFLAGS:C/ $//:N-O}
+.if !${CFLAGS:M-O*}
+CFLAGS+=	-O2
+.endif
 
 .if defined(WITHOUT_CPU_CFLAGS)
 .if defined(_CPUCFLAGS)
@@ -1787,7 +1804,9 @@ INSTALL_TARGET:=	${INSTALL_TARGET:S/^ins
 .endif
 
 .if !defined(WITHOUT_SSP)
-.include "${PORTSDIR}/Mk/bsd.ssp.mk"
+# Leave the conditional just in case WITHOUT_SSP becomes
+# something else.
+#.include "${PORTSDIR}/Mk/bsd.ssp.mk"
 .endif
 
 # XXX PIE support to be added here
@@ -1807,21 +1826,6 @@ MAKE_ENV+=		SHELL=${MAKE_SHELL} NO_LINT=
 PATCH_DEPENDS+=		${LOCALBASE}/bin/unzip:archivers/unzip
 .endif
 
-# Check the compatibility layer for amd64
-
-.if ${ARCH} == "amd64"
-.if exists(/usr/lib32)
-HAVE_COMPAT_IA32_LIBS?=  YES
-.endif
-.if !defined(HAVE_COMPAT_IA32_KERN)
-HAVE_COMPAT_IA32_KERN!= if ${SYSCTL} -n compat.ia32.maxvmem >/dev/null 2>&1; then echo YES; fi; echo
-.if empty(HAVE_COMPAT_IA32_KERN)
-.undef HAVE_COMPAT_IA32_KERN
-.endif
-.endif
-.endif
-_EXPORTED_VARS+=	HAVE_COMPAT_IA32_KERN
-
 .if defined(IA32_BINARY_PORT) && ${ARCH} != "i386"
 .if ${ARCH} == "amd64"
 .if !defined(HAVE_COMPAT_IA32_KERN)
@@ -1847,8 +1851,27 @@ PKG_ORIGIN=		ports-mgmt/pkg-devel
 PKG_DEPENDS+=	${LOCALBASE}/sbin/pkg:${PKG_ORIGIN}
 .endif
 
-.if defined(USE_GCC)
-.include "${PORTSDIR}/Mk/bsd.gcc.mk"
+.if defined(USE_CLANG_FALLBACK)
+. if ${USE_CLANG_FALLBACK:Mdefault}
+BUILD_DEPENDS+= clang${LLVM_DEFAULT}:devel/llvm${LLVM_DEFAULT}
+CC=clang${LLVM_DEFAULT}
+CXX=clang++${LLVM_DEFAULT}
+CPP=clang-cpp${LLVM_DEFAULT}
+. else
+BUILD_DEPENDS+= clang${USE_CLANG_FALLBACK}:devel/llvm${USE_CLANG_FALLBACK}
+CC=clang${USE_CLANG_FALLBACK}
+CXX=clang++${USE_CLANG_FALLBACK}
+CPP=clang-cpp${USE_CLANG_FALLBACK}
+. endif
+.else
+.if defined(USE_GCC) || defined(USE_GCC_VERSION)
+.include "${PORTSDIR}/Mk/bsd.df.gcc.mk"
+.else
+.  if !defined(USE_GNUSTEP)
+CONFIGURE_ENV+= 	CCVER=gcc80
+MAKE_ENV+=		CCVER=gcc80
+.  endif
+.endif
 .endif
 
 .if defined(LLD_UNSAFE) && ${/usr/bin/ld:L:tA} == /usr/bin/ld.lld
@@ -1871,7 +1894,7 @@ USE_BINUTILS=	yes
 .endif
 
 .if defined(USE_BINUTILS) && !defined(DISABLE_BINUTILS)
-BUILD_DEPENDS+=	${LOCALBASE}/bin/as:devel/binutils
+BUILD_DEPENDS+=	${LOCALBASE}/bin/as:devel/binutils@native
 BINUTILS?=	ADDR2LINE AR AS CPPFILT GPROF LD NM OBJCOPY OBJDUMP RANLIB \
 	READELF SIZE STRINGS
 BINUTILS_NO_MAKE_ENV?=
@@ -2056,8 +2079,10 @@ DISTINFO_FILE?=		${MASTERDIR}/distinfo
 MAKE_FLAGS?=	-f
 MAKEFILE?=		Makefile
 MAKE_CMD?=		${BSDMAKE}
+PLIST_SUB:=		${PLIST_SUB:NPROFILE=*} PROFILE="@comment "
 MAKE_ENV+=		PREFIX=${PREFIX} \
 			LOCALBASE=${LOCALBASE} \
+			NOPROFILE=1 \
 			CC="${CC}" CFLAGS="${CFLAGS}" \
 			CPP="${CPP}" CPPFLAGS="${CPPFLAGS}" \
 			LDFLAGS="${LDFLAGS}" LIBS="${LIBS}" \
@@ -2094,7 +2119,7 @@ MAKE_JOBS_NUMBER=	1
 _MAKE_JOBS_NUMBER:=	${MAKE_JOBS_NUMBER}
 .else
 .if !defined(_SMP_CPUS)
-_SMP_CPUS!=		${SYSCTL} -n kern.smp.cpus
+_SMP_CPUS!=		${SYSCTL} -n hw.ncpu
 .endif
 _EXPORTED_VARS+=	_SMP_CPUS
 _MAKE_JOBS_NUMBER=	${_SMP_CPUS}
@@ -2647,7 +2672,7 @@ CONFIG_SITE?=		${PORTSDIR}/Templates/con
 .if defined(GNU_CONFIGURE)
 # Maximum command line length
 .if !defined(CONFIGURE_MAX_CMD_LEN)
-CONFIGURE_MAX_CMD_LEN!=	${SYSCTL} -n kern.argmax
+CONFIGURE_MAX_CMD_LEN=	262144
 .endif
 _EXPORTED_VARS+=	CONFIGURE_MAX_CMD_LEN
 GNU_CONFIGURE_PREFIX?=	${PREFIX}
@@ -2689,6 +2714,8 @@ SET_LATE_CONFIGURE_ARGS= \
 SCRIPTS_ENV+=	CURDIR=${MASTERDIR} DISTDIR=${DISTDIR} \
 		  WRKDIR=${WRKDIR} WRKSRC=${WRKSRC} PATCHDIR=${PATCHDIR} \
 		  SCRIPTDIR=${SCRIPTDIR} FILESDIR=${FILESDIR} \
+		  DFLY_PATCHDIR=${DFLY_PATCHDIR} \
+		  DFLY_FILESDIR=${DFLY_FILESDIR} \
 		  PORTSDIR=${PORTSDIR} PREFIX=${PREFIX} LOCALBASE=${LOCALBASE}
 
 .if defined(BATCH)
@@ -2767,7 +2794,7 @@ DESKTOPDIR?=		${PREFIX}/share/applicatio
 
 # Check the machine architectures
 .if defined(ONLY_FOR_ARCHS)
-.for __ARCH in ${ONLY_FOR_ARCHS}
+.for __ARCH in ${ONLY_FOR_ARCHS:S/amd64/x86_64/}
 .if ${ARCH:M${__ARCH}} != ""
 __ARCH_OK?=		1
 .endif
@@ -2777,7 +2804,7 @@ __ARCH_OK?=		1
 .endif
 
 .if defined(NOT_FOR_ARCHS)
-.for __NARCH in ${NOT_FOR_ARCHS}
+.for __NARCH in ${NOT_FOR_ARCHS:S/amd64/x86_64/}
 .if ${ARCH:M${__NARCH}} != ""
 .undef __ARCH_OK
 .endif
@@ -2786,9 +2813,9 @@ __ARCH_OK?=		1
 
 .if !defined(__ARCH_OK)
 .if defined(ONLY_FOR_ARCHS)
-IGNORE=		is only for ${ONLY_FOR_ARCHS:O},
+IGNORE=		is only for ${ONLY_FOR_ARCHS:O:S/amd64/x86_64/},
 .else # defined(NOT_FOR_ARCHS)
-IGNORE=		does not run on ${NOT_FOR_ARCHS:O},
+IGNORE=		does not run on ${NOT_FOR_ARCHS:O:S/amd64/x86_64/},
 .endif
 IGNORE+=	while you are running ${ARCH}
 
@@ -2935,6 +2962,7 @@ all:
 	  DISTDIR=${DISTDIR} WRKDIR=${WRKDIR} WRKSRC=${WRKSRC} \
 	  PATCHDIR=${PATCHDIR} SCRIPTDIR=${SCRIPTDIR} \
 	  FILESDIR=${FILESDIR} PORTSDIR=${PORTSDIR} PREFIX=${PREFIX} \
+	  DFLY_PATCHDIR=${DFLY_PATCHDIR} DFLY_FILESDIR=${DFLY_FILESDIR} \
 	  BUILD_DEPENDS="${BUILD_DEPENDS}" RUN_DEPENDS="${RUN_DEPENDS}" \
 	  CONFLICTS="${CONFLICTS}" \
 	${ALL_HOOK}
@@ -3195,6 +3223,7 @@ do-patch:
 			dp_OPSYS="${OPSYS}" \
 			dp_PATCH="${PATCH}" \
 			dp_PATCHDIR="${PATCHDIR}" \
+			dp_DFLY_PATCHDIR="${DFLY_PATCHDIR}" \
 			dp_PATCHFILES="${_PATCHFILES2}" \
 			dp_PATCH_ARGS=${PATCH_ARGS:Q} \
 			dp_PATCH_DEBUG_TMP="${PATCH_DEBUG_TMP}" \
@@ -3277,6 +3306,14 @@ do-configure:
 DO_MAKE_BUILD?=	${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_FLAGS} ${MAKEFILE} ${_MAKE_JOBS} ${MAKE_ARGS:N${DESTDIRNAME}=*}
 .if !target(do-build)
 do-build:
+.if defined(DFLY_ALLOW_REMAKE)
+	@(cd ${BUILD_WRKSRC}; ${ECHO_CMD} "===> Building with DFLY_ALLOW_REMAKE=${DFLY_ALLOW_REMAKE}" ; \
+	  if ! ${DO_MAKE_BUILD} ${ALL_TARGET}; then \
+	    (${ECHO_CMD} "===> DFLY WARNING: First attempt failed! Retrying ... ${DFLY_ALLOW_REMAKE}") | ${FMT_80} ; \
+	  else \
+	    (${ECHO_CMD} "===> DFLY Built from first attempt? ${DFLY_ALLOW_REMAKE}") | ${FMT_80} ; \
+	  fi)
+.endif
 	@(cd ${BUILD_WRKSRC}; if ! ${DO_MAKE_BUILD} ${ALL_TARGET}; then \
 		if [ -n "${BUILD_FAIL_MESSAGE}" ] ; then \
 			${ECHO_MSG} "===> Compilation failed unexpectedly."; \
@@ -3780,6 +3817,7 @@ do-clean:
 	@if [ -d ${WRKDIR} ]; then \
 		if [ -w ${WRKDIR} ]; then \
 			${RM} -r ${WRKDIR}; \
+			${FIND} ${WRKDIR:H} -type d -maxdepth 1 -empty -delete; \
 		else \
 			${ECHO_MSG} "===>   ${WRKDIR} not writable, skipping"; \
 		fi; \
@@ -4153,7 +4191,7 @@ FETCH_LIST?=	for i in $$deps; do \
 			else	\
 				continue;	\
 			fi;;	\
-		*) if [ -d ${PKG_DBDIR}/$$(cd $$dir; ${MAKE} -V PKGNAME) ]; then \
+		*) if [ -d ${PKG_DBDIR}/$$(cd $$dir; ${MAKE} -V '$${PKGNAME}') ]; then \
 				continue;	\
 			fi;;	\
 		esac;	\
@@ -4483,10 +4521,15 @@ _SUB_LIST_TEMP=	${SUB_LIST:S/$/!g/:S/^/
 apply-slist:
 .if defined(SUB_FILES)
 .for file in ${SUB_FILES}
-.if !exists(${FILESDIR}/${file}.in)
-	@${ECHO_MSG} "** Missing ${FILESDIR}/${file}.in for ${PKGNAME}."; exit 1
-.else
+.if exists(${FILESDIR}/${file}.in)
 	@${SED} ${_SUB_LIST_TEMP} -e '/^@comment /d' ${FILESDIR}/${file}.in > ${WRKDIR}/${file}
+.elif exists(${DFLY_FILESDIR}/${file}.in)
+	@${SED} ${_SUB_LIST_TEMP} -e '/^@comment /d' ${DFLY_FILESDIR}/${file}.in > ${WRKDIR}/${file}
+.else
+	@${ECHO_MSG} "** Checked ${FILESDIR}:"; \
+	@${ECHO_MSG} "** Checked ${DFLY_FILESDIR}:"; \
+	@${ECHO_MSG} "** Missing ${file}.in for ${PKGNAME}."; \
+	exit 1
 .endif
 .endfor
 .for i in pkg-message pkg-install pkg-deinstall pkg-req
@@ -5240,26 +5283,26 @@ _SANITY_SEQ=	050:post-chroot 100:pre-eve
 				350:check-desktop-entries 400:check-depends \
 				450:identify-install-conflicts 500:check-deprecated \
 				550:check-vulnerable 600:check-license 650:check-config \
-				700:buildanyway-message 750:options-message ${_USES_sanity}
+				700:buildanyway-message 750:options-message 780:dfly-sanity ${_USES_sanity}
 
 _PKG_DEP=		check-sanity
 _PKG_SEQ=		500:pkg-depends
 _FETCH_DEP=		pkg
 _FETCH_SEQ=		150:fetch-depends 300:pre-fetch 450:pre-fetch-script \
 				500:do-fetch 550:fetch-specials 700:post-fetch \
-				850:post-fetch-script \
+				850:post-fetch-script 880:dfly-fetch \
 				${_OPTIONS_fetch} ${_USES_fetch}
 _EXTRACT_DEP=	fetch
 _EXTRACT_SEQ=	010:check-build-conflicts 050:extract-message 100:checksum \
 				150:extract-depends 190:clean-wrkdir 200:${EXTRACT_WRKDIR} \
 				300:pre-extract 450:pre-extract-script 500:do-extract \
-				700:post-extract 850:post-extract-script \
+				700:post-extract 850:post-extract-script 880:dfly-extract \
 				999:extract-fixup-modes \
 				${_OPTIONS_extract} ${_USES_extract} ${_SITES_extract}
 _PATCH_DEP=		extract
 _PATCH_SEQ=		050:ask-license 100:patch-message 150:patch-depends \
 				300:pre-patch 450:pre-patch-script 500:do-patch \
-				700:post-patch 850:post-patch-script \
+				700:post-patch 850:post-patch-script 880:dfly-patch \
 				${_OPTIONS_patch} ${_USES_patch}
 _CONFIGURE_DEP=	patch
 _CONFIGURE_SEQ=	150:build-depends 151:lib-depends 160:create-binary-alias \
@@ -5267,11 +5310,11 @@ _CONFIGURE_SEQ=	150:build-depends 151:li
 				200:configure-message \
 				300:pre-configure 450:pre-configure-script \
 				490:run-autotools-fixup 500:do-configure 700:post-configure \
-				850:post-configure-script \
+				850:post-configure-script 880:dfly-configure \
 				${_OPTIONS_configure} ${_USES_configure}
 _BUILD_DEP=		configure
 _BUILD_SEQ=		100:build-message 300:pre-build 450:pre-build-script \
-				500:do-build 700:post-build 850:post-build-script \
+				500:do-build 700:post-build 850:post-build-script 880:dfly-build \
 				${_OPTIONS_build} ${_USES_build}
 _STAGE_DEP=		build
 # STAGE is special in its numbering as it has install and stage, so install is
@@ -5280,7 +5323,7 @@ _STAGE_SEQ=		050:stage-message 100:stage
 				200:apply-slist 300:pre-install \
 				400:generate-plist 450:pre-su-install 475:create-users-groups \
 				500:do-install 550:kmod-post-install 600:fixup-lib-pkgconfig 700:post-install \
-				750:post-install-script 800:post-stage 850:compress-man \
+				750:post-install-script 780:dfly-install 800:post-stage 850:compress-man \
 				860:install-rc-script 870:install-ldconfig-file \
 				880:install-license 890:install-desktop-entries \
 				900:add-plist-info 910:add-plist-docs 920:add-plist-examples \
@@ -5294,7 +5337,7 @@ stage-qa: stage
 .endif
 _TEST_DEP=		stage
 _TEST_SEQ=		100:test-message 150:test-depends 300:pre-test 500:do-test \
-				800:post-test \
+				800:post-test 880:dfly-test \
 				${_OPTIONS_test} ${_USES_test}
 _INSTALL_DEP=	stage
 _INSTALL_SEQ=	100:install-message \

--- Uses/cmake.mk.orig	2023-09-27 19:50:44 UTC
+++ Uses/cmake.mk
@@ -95,8 +95,9 @@ CMAKE_ARGS+=		-DCMAKE_C_COMPILER:STRING=
 			-DCMAKE_BUILD_TYPE:STRING="${CMAKE_BUILD_TYPE}" \
 			-DTHREADS_HAVE_PTHREAD_ARG:BOOL=YES \
 			-DCMAKE_INSTALL_RPATH_USE_LINK_PATH=YES \
+			-DCMAKE_NO_BUILTIN_CHRPATH:BOOL=OFF \
 			-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \
-			-DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON
+			-DFETCHCONTENT_FULLY_DISCONNECTED:BOOL=ON ${DFLY_CMAKE_ARGS}
 
 # Handle the option-like CMAKE_ON and CMAKE_OFF lists.
 .    for _bool_kind in ON OFF
@@ -134,16 +135,16 @@ TEST_WRKSRC?=		${CONFIGURE_WRKSRC}
 .    if empty(cmake_ARGS:Mnoninja) && empty(cmake_ARGS:Mrun) && empty(USES:Mfortran)
 .      if "${CONFIGURE_WRKSRC}" == "${BUILD_WRKSRC}" && "${CONFIGURE_WRKSRC}" == "${INSTALL_WRKSRC}"
 # USES=gmake sets MAKE_CMD and ninja.mk does too (it also messes with MAKEFILE and MAKE_CMD).
-.        if ! empty(USES:Mgmake)
-BROKEN=		USES=gmake is incompatible with cmake's ninja-generator (try cmake:noninja)
-.        endif
+#.        if ! empty(USES:Mgmake)
+#BROKEN=		USES=gmake is incompatible with cmake's ninja-generator (try cmake:noninja)
+#.        endif
 # USES=emacs appends EMACS=<path> to MAKE_ARGS, which then get passed to ninja.
 # Since ninja doesn't support that kind of variable-setting on the command-line,
 # it errors out.
 .        if ! empty(USES:Memacs)
 BROKEN=		USES=emacs is incompatible with cmake's ninja-generator (try cmake:noninja)
 .        endif
-.      include "${USESDIR}/ninja.mk"
+#.      include "${USESDIR}/ninja.mk"
 .      endif
 .    endif
 
